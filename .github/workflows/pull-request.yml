name: pull-request
on: push

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'

  build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache 
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run dev:build
        

  lint:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'  
      - run: npm run lint

  test-jest:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run test
  
  cypress-e2e-scully:
    runs-on: ubuntu-latest
    needs: firebase-deploy-scully-to-preview
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run lint
 
  cypress-e2e-main:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - name: Decrypt large secret
        run: |
           gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output /home/runner/work/liberty-flights/liberty-flights/.env .env.gpg
        env:
           LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - run: ./deploy/script_test.sh
  
  firebase-deploy-scully-to-preview:
     runs-on: ubuntu-latest
     needs: cache
     steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - name: Decrypt large secret
        run: |
           gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output /home/runner/work/liberty-flights/liberty-flights/.env .env.gpg
        env:
           LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - run: npm run ssr:staging
      - run: ./deploy/run_server_scully.sh
      - run: npm run scully:build:staging
      - name: Deploy to Firebase
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: test-flow
          expires: 2d
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels  
